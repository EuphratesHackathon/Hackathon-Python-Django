name: CD Pipeline for PyGoat

on:
  push:
    branches:
      - devopss
  pull_request:
    branches:
      - devopss

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: pygoat_user
          POSTGRES_PASSWORD: secure_password_2025
          POSTGRES_DB: pygoat
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t pygoat:latest .

      - name: Run tests
        run: |
          docker run --rm \
            -e DATABASE_HOST=postgres \
            -e DATABASE_NAME=pygoat \
            -e DATABASE_USER=pygoat_user \
            -e DATABASE_PASSWORD=secure_password_2025 \
            -e DATABASE_PORT=5432 \
            -e DJANGO_SECRET_KEY=your_django_secret_key_2025 \
            -e DJANGO_DEBUG=False \
            --network host \
            pygoat:latest \
            python manage.py test

      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: pygoat:latest
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pygoat:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pygoat:latest
